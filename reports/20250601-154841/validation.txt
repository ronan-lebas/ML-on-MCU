

Starting AI validation on target with custom dataset : C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250609-185330\inputs.csv... 
C:/Users/ronan/STM32Cube/Repository/Packs/STMicroelectronics/X-CUBE-AI/10.0.0/Utilities/windows/stedgeai.exe validate --target stm32l4 --name network -m C:/Users/ronan/Documents/ETH/S2/Machine Learning on Microcontrollers/project/reports/20250601-154841/model_quantized.onnx --compression none --verbosity 1 --workspace C:/Users/ronan/AppData/Local/Temp/mxAI_workspace4168021810560011897729757520193484 --output C:/Users/ronan/.stm32cubemx/network_output --valoutput C:/Users/ronan/Documents/ETH/S2/Machine Learning on Microcontrollers/project/reports/20250609-185330/outputs.csv --mode target --valinput C:/Users/ronan/Documents/ETH/S2/Machine Learning on Microcontrollers/project/reports/20250609-185330/inputs.csv --desc serial:115200 
ST Edge AI Core v2.0.0-20049 
Setting validation data... 
 loading file: C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250609-185330\inputs.csv 
   samples are reshaped: (100, 2040) -> (100, 40, 51, 1) 
 loading file: C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250609-185330\outputs.csv 
   samples are reshaped: (100, 8) -> (100, 1, 1, 8) 
   I[1]: (100, 40, 51, 1)/float32, min/max=[-602.234680, 196.972946], mean/std=[-6.763055, 46.227463] 
    c/I[1] conversion [Q(3.13133597,63)]-> (100, 40, 51, 1)/int8, min/max=[-128, 126], mean/std=[60.839975, 14.764641] 
    m/I[1] no modification. 
   O[1]: (100, 1, 1, 8)/float32, min/max=[0.000000, 1.000000], mean/std=[0.125000, 0.330719] 
Creating c (debug) info json file C:\Users\ronan\AppData\Local\Temp\mxAI_workspace4168021810560011897729757520193484\network_c_info.json 
  
 Exec/report summary (validate) 
 --------------------------------------------------------------------------------------------------------------------------------------------------- 
 model file         :   C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250601-154841\model_quantized.onnx    
 type               :   onnx                                                                                                                         
 c_name             :   network                                                                                                                      
 compression        :   none                                                                                                                         
 options            :   allocate-inputs, allocate-outputs                                                                                            
 optimization       :   balanced                                                                                                                     
 target/series      :   stm32l4                                                                                                                      
 workspace dir      :   C:\Users\ronan\AppData\Local\Temp\mxAI_workspace4168021810560011897729757520193484                                           
 output dir         :   C:\Users\ronan\.stm32cubemx\network_output                                                                                   
 vinput files       :   C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250609-185330\inputs.csv              
 voutput files      :   C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250609-185330\outputs.csv             
 model_fmt          :   ss/sa per tensor                                                                                                             
 model_name         :   model_quantized                                                                                                              
 model_hash         :   0xd23b7a161b29a1898e3f4b147dcb4a30                                                                                           
 params #           :   295,208 items (1153.16 KiB)                                                                                                  
 --------------------------------------------------------------------------------------------------------------------------------------------------- 
 input 1/1          :   'input', int8(1x40x51x1), 1.99 KBytes, QLinear(3.131335974,63,int8), activations                                             
 output 1/1         :   'output_QuantizeLinear_Input', int8(1x8), 8 Bytes, QLinear(0.164590389,-19,int8), activations                                
 macc               :   73,697,544                                                                                                                   
 weights (ro)       :   296,768 B (289.81 KiB) (1 segment) / -884,064(-74.9%) vs float model                                                         
 activations (rw)   :   76,608 B (74.81 KiB) (1 segment) *                                                                                           
 ram (total)        :   76,608 B (74.81 KiB) = 76,608 + 0 + 0                                                                                        
 --------------------------------------------------------------------------------------------------------------------------------------------------- 
 (*) 'input'/'output' buffers can be used from the activations buffer 
Running the ONNX model... 
Running the ST.AI c-model (AI RUNNER)...(name=network, mode=TARGET) 
 Proto-buffer driver v2.0 (msg v3.1) (Serial driver v1.0 - COM4:115200) ['network'] 
  Summary 'network' - ['network'] 
  ------------------------------------------------------------------------------------------------- 
  I[1/1] 'input_1'    :   int8[1,40,51,1], 2040 Bytes, QLinear(3.131335974,63,int8), activations 
  O[1/1] 'output_1'   :   int8[1,1,1,8], 8 Bytes, QLinear(0.164590389,-19,int8), activations 
  n_nodes             :   9 
  activations         :   76608 
  weights             :   296768 
  macc                :   73697544 
  hash                :   0xd23b7a161b29a1898e3f4b147dcb4a30 
  compile_datetime    :   Jun  9 2025 22:33:18 
  ------------------------------------------------------------------------------------------------- 
  protocol            :   Proto-buffer driver v2.0 (msg v3.1) (Serial driver v1.0 - COM4:115200) 
  tools               :   ST.AI (legacy api) v2.0.0 
  runtime lib         :   v10.0.0-fd22b7f9 compiled with GCC 11.3.1 (GCC) 
  capabilities        :   IO_ONLY, PER_LAYER, PER_LAYER_WITH_DATA 
  device.desc         :   stm32 family - 0x415 - STM32L4x6xx @80/80MHz 
  device.attrs        :   fpu,art_lat=4,art_icache,art_dcache 
  ------------------------------------------------------------------------------------------------- 
STAI.IO:   0%|          | 0/100 [00:00<?, ?it/s] 
STAI.IO:   2%|2         | 2/100 [00:02<02:09,  1.32s/it] 
STAI.IO:   3%|3         | 3/100 [00:05<03:01,  1.87s/it] 
STAI.IO:   4%|4         | 4/100 [00:07<03:26,  2.15s/it] 
STAI.IO:   5%|5         | 5/100 [00:10<03:40,  2.32s/it] 
STAI.IO:   7%|7         | 7/100 [00:15<03:51,  2.49s/it] 
STAI.IO:   8%|8         | 8/100 [00:18<03:53,  2.54s/it] 
STAI.IO:   9%|9         | 9/100 [00:21<03:53,  2.57s/it] 
STAI.IO:  10%|#         | 10/100 [00:23<03:52,  2.59s/it] 
STAI.IO:  11%|#1        | 11/100 [00:26<03:51,  2.60s/it] 
STAI.IO:  12%|#2        | 12/100 [00:28<03:49,  2.61s/it] 
STAI.IO:  13%|#3        | 13/100 [00:31<03:47,  2.62s/it] 
STAI.IO:  14%|#4        | 14/100 [00:34<03:45,  2.62s/it] 
STAI.IO:  15%|#5        | 15/100 [00:36<03:43,  2.63s/it] 
STAI.IO:  16%|#6        | 16/100 [00:39<03:40,  2.63s/it] 
STAI.IO:  17%|#7        | 17/100 [00:42<03:38,  2.63s/it] 
STAI.IO:  18%|#8        | 18/100 [00:44<03:35,  2.63s/it] 
STAI.IO:  19%|#9        | 19/100 [00:47<03:33,  2.63s/it] 
STAI.IO:  20%|##        | 20/100 [00:50<03:30,  2.63s/it] 
STAI.IO:  21%|##1       | 21/100 [00:52<03:28,  2.63s/it] 
STAI.IO:  22%|##2       | 22/100 [00:55<03:25,  2.63s/it] 
STAI.IO:  23%|##3       | 23/100 [00:57<03:22,  2.63s/it] 
STAI.IO:  24%|##4       | 24/100 [01:00<03:20,  2.63s/it] 
STAI.IO:  25%|##5       | 25/100 [01:03<03:17,  2.63s/it] 
STAI.IO:  26%|##6       | 26/100 [01:05<03:14,  2.63s/it] 
STAI.IO:  27%|##7       | 27/100 [01:08<03:12,  2.63s/it] 
STAI.IO:  28%|##8       | 28/100 [01:11<03:09,  2.63s/it] 
STAI.IO:  29%|##9       | 29/100 [01:13<03:06,  2.63s/it] 
STAI.IO:  30%|###       | 30/100 [01:16<03:04,  2.63s/it] 
STAI.IO:  31%|###1      | 31/100 [01:19<03:01,  2.63s/it] 
STAI.IO:  32%|###2      | 32/100 [01:21<02:59,  2.63s/it] 
STAI.IO:  33%|###3      | 33/100 [01:24<02:56,  2.63s/it] 
STAI.IO:  34%|###4      | 34/100 [01:26<02:53,  2.63s/it] 
STAI.IO:  35%|###5      | 35/100 [01:29<02:51,  2.63s/it] 
STAI.IO:  36%|###6      | 36/100 [01:32<02:48,  2.63s/it] 
STAI.IO:  37%|###7      | 37/100 [01:34<02:45,  2.63s/it] 
STAI.IO:  38%|###8      | 38/100 [01:37<02:43,  2.63s/it] 
STAI.IO:  39%|###9      | 39/100 [01:40<02:40,  2.63s/it] 
STAI.IO:  40%|####      | 40/100 [01:42<02:38,  2.63s/it] 
STAI.IO:  41%|####1     | 41/100 [01:45<02:35,  2.63s/it] 
STAI.IO:  42%|####2     | 42/100 [01:47<02:32,  2.63s/it] 
STAI.IO:  43%|####3     | 43/100 [01:50<02:30,  2.63s/it] 
STAI.IO:  44%|####4     | 44/100 [01:53<02:27,  2.63s/it] 
STAI.IO:  45%|####5     | 45/100 [01:55<02:24,  2.63s/it] 
STAI.IO:  46%|####6     | 46/100 [01:58<02:22,  2.63s/it] 
STAI.IO:  47%|####6     | 47/100 [02:01<02:19,  2.63s/it] 
STAI.IO:  48%|####8     | 48/100 [02:03<02:16,  2.63s/it] 
STAI.IO:  49%|####9     | 49/100 [02:06<02:14,  2.63s/it] 
STAI.IO:  50%|#####     | 50/100 [02:09<02:11,  2.63s/it] 
STAI.IO:  51%|#####1    | 51/100 [02:11<02:09,  2.63s/it] 
STAI.IO:  52%|#####2    | 52/100 [02:14<02:06,  2.63s/it] 
STAI.IO:  53%|#####3    | 53/100 [02:16<02:03,  2.63s/it] 
STAI.IO:  54%|#####4    | 54/100 [02:19<02:01,  2.63s/it] 
STAI.IO:  55%|#####5    | 55/100 [02:22<01:58,  2.63s/it] 
STAI.IO:  56%|#####6    | 56/100 [02:24<01:55,  2.63s/it] 
STAI.IO:  57%|#####6    | 57/100 [02:27<01:53,  2.63s/it] 
STAI.IO:  58%|#####8    | 58/100 [02:30<01:50,  2.63s/it] 
STAI.IO:  59%|#####8    | 59/100 [02:32<01:47,  2.63s/it] 
STAI.IO:  60%|######    | 60/100 [02:35<01:45,  2.63s/it] 
STAI.IO:  61%|######1   | 61/100 [02:38<01:42,  2.63s/it] 
STAI.IO:  62%|######2   | 62/100 [02:40<01:40,  2.63s/it] 
STAI.IO:  63%|######3   | 63/100 [02:43<01:37,  2.63s/it] 
STAI.IO:  64%|######4   | 64/100 [02:45<01:34,  2.63s/it] 
STAI.IO:  65%|######5   | 65/100 [02:48<01:32,  2.63s/it] 
STAI.IO:  66%|######6   | 66/100 [02:51<01:29,  2.63s/it] 
STAI.IO:  67%|######7   | 67/100 [02:53<01:26,  2.63s/it] 
STAI.IO:  68%|######8   | 68/100 [02:56<01:24,  2.63s/it] 
STAI.IO:  69%|######9   | 69/100 [02:59<01:21,  2.63s/it] 
STAI.IO:  70%|#######   | 70/100 [03:01<01:19,  2.63s/it] 
STAI.IO:  71%|#######1  | 71/100 [03:04<01:16,  2.63s/it] 
STAI.IO:  72%|#######2  | 72/100 [03:07<01:13,  2.63s/it] 
STAI.IO:  73%|#######3  | 73/100 [03:09<01:11,  2.63s/it] 
STAI.IO:  74%|#######4  | 74/100 [03:12<01:08,  2.63s/it] 
STAI.IO:  75%|#######5  | 75/100 [03:14<01:05,  2.63s/it] 
STAI.IO:  76%|#######6  | 76/100 [03:17<01:03,  2.63s/it] 
STAI.IO:  77%|#######7  | 77/100 [03:20<01:00,  2.63s/it] 
STAI.IO:  78%|#######8  | 78/100 [03:22<00:57,  2.63s/it] 
STAI.IO:  79%|#######9  | 79/100 [03:25<00:55,  2.63s/it] 
STAI.IO:  80%|########  | 80/100 [03:28<00:52,  2.63s/it] 
STAI.IO:  81%|########1 | 81/100 [03:30<00:50,  2.63s/it] 
STAI.IO:  82%|########2 | 82/100 [03:33<00:47,  2.63s/it] 
STAI.IO:  83%|########2 | 83/100 [03:35<00:44,  2.63s/it] 
STAI.IO:  84%|########4 | 84/100 [03:38<00:42,  2.63s/it] 
STAI.IO:  85%|########5 | 85/100 [03:41<00:39,  2.63s/it] 
STAI.IO:  86%|########6 | 86/100 [03:43<00:36,  2.63s/it] 
STAI.IO:  87%|########7 | 87/100 [03:46<00:34,  2.63s/it] 
STAI.IO:  88%|########8 | 88/100 [03:49<00:31,  2.63s/it] 
STAI.IO:  89%|########9 | 89/100 [03:51<00:28,  2.63s/it] 
STAI.IO:  90%|######### | 90/100 [03:54<00:26,  2.63s/it] 
STAI.IO:  91%|#########1| 91/100 [03:57<00:23,  2.63s/it] 
STAI.IO:  92%|#########2| 92/100 [03:59<00:21,  2.63s/it] 
STAI.IO:  93%|#########3| 93/100 [04:02<00:18,  2.63s/it] 
STAI.IO:  94%|#########3| 94/100 [04:04<00:15,  2.63s/it] 
STAI.IO:  95%|#########5| 95/100 [04:07<00:13,  2.63s/it] 
STAI.IO:  96%|#########6| 96/100 [04:10<00:10,  2.63s/it] 
STAI.IO:  97%|#########7| 97/100 [04:12<00:07,  2.63s/it] 
STAI.IO:  98%|#########8| 98/100 [04:15<00:05,  2.63s/it] 
STAI.IO:  99%|#########9| 99/100 [04:18<00:02,  2.63s/it] 
  ST.AI Profiling results v2.0 - "network" 
  ------------------------------------------------------------------------ 
  nb sample(s)      :   100 
  duration          :   2217.738 ms by sample (2217.735/2217.740/0.001) 
  macc              :   73697544 
  cycles/MACC       :   2.41 
  CPU cycles        :   [177,419,013] 
  used stack/heap   :   not monitored/0 bytes 
  ------------------------------------------------------------------------ 
   Inference time per node 
   ----------------------------------------------------------------------------------------------- 
   c_id    m_id   type                   dur (ms)       %    cumul  CPU cycles        name 
   ----------------------------------------------------------------------------------------------- 
   0       22     Conv2D (0x103)           49.507    2.2%     2.2%  [   3,960,566 ]   ai_node_0 
   1       28     Conv2dPool (0x109)      494.904   22.3%    24.5%  [  39,592,348 ]   ai_node_1 
   2       31     Conv2D (0x103)          229.679   10.4%    34.9%  [  18,374,345 ]   ai_node_2 
   3       37     Conv2dPool (0x109)      559.108   25.2%    60.1%  [  44,728,632 ]   ai_node_3 
   4       40     Conv2D (0x103)          253.554   11.4%    71.5%  [  20,284,314 ]   ai_node_4 
   5       43     Conv2D (0x103)          628.872   28.4%    99.9%  [  50,309,780 ]   ai_node_5 
   6       46     Pool (0x10b)              1.790    0.1%   100.0%  [     143,212 ]   ai_node_6 
   7       56     Dense (0x104)             0.278    0.0%   100.0%  [      22,212 ]   ai_node_7 
   8       59     Dense (0x104)             0.045    0.0%   100.0%  [       3,604 ]   ai_node_8 
   ----------------------------------------------------------------------------------------------- 
   total                                 2217.738                   [ 177,419,013 ] 
   ----------------------------------------------------------------------------------------------- 
   Statistic per tensor 
   -------------------------------------------------------------------------------- 
   tensor   #     type[shape]:size        min   max      mean      std  name 
   -------------------------------------------------------------------------------- 
   I.0      100   i8[1,40,51,1]:2040     -128   126    60.840   14.765  input_1 
   O.0      100   i8[1,1,1,8]:8          -116   107   -18.227   41.733  output_1 
   -------------------------------------------------------------------------------- 
Saving validation data... 
 output directory: C:\Users\ronan\.stm32cubemx\network_output 
 creating C:\Users\ronan\.stm32cubemx\network_output\network_val_io.npz 
 m_outputs_1: (100, 1, 1, 8)/float64, min/max=[-15.965268, 20.738388], mean/std=[0.127146, 6.868762], output_QuantizeLinear_Input 
 c_outputs_1: (100, 1, 1, 8)/int8, min/max=[-116, 107], mean/std=[-18.227500, 41.732760], scale=0.164590389 zp=-19, output_QuantizeLinear_Input 
Computing the metrics... 
 Accuracy report #1 for the generated TARGET C-model 
 ---------------------------------------------------------------------------------------------------- 
 notes: - data type is different: r/float32 instead p/int8 
        - p/int8 data are dequantized with s=0.16459038853645325 zp=-19 
        - computed against the provided ground truth values 
        - 100 samples (8 items per sample) 
  acc=91.00% rmse=6.667086601 mae=5.294612408 l2r=0.970465541 mean=-0.002146 std=6.671257 nse=-404.891984 cos=0.591149 
  Confusion matrix (axis=-1) - 8 classes (100 samples) 
  ------------------------------------------------ 
  C0        9    .    3    .    1    .    .    . 
  C1        .   15    .    .    .    .    .    1 
  C2        .    1   14    .    .    .    .    . 
  C3        .    .    .    7    .    .    1    . 
  C4        .    .    .    .   10    1    .    . 
  C5        .    1    .    .    .    9    .    . 
  C6        .    .    .    .    .    .   12    . 
  C7        .    .    .    .    .    .    .   15 
 Accuracy report #1 for the reference model 
 ---------------------------------------------------------------------------------------------------- 
 notes: - data type is different: r/float32 instead p/float64 
        - p/float64 data are converted to np.float32 
        - computed against the provided ground truth values 
        - 100 samples (8 items per sample) 
  acc=91.00% rmse=6.667035580 mae=5.294612408 l2r=0.970465124 mean=-0.002146 std=6.671206 nse=-404.885784 cos=0.591153 
  Confusion matrix (axis=-1) - 8 classes (100 samples) 
  ------------------------------------------------ 
  C0        9    .    3    .    1    .    .    . 
  C1        .   15    .    .    .    .    .    1 
  C2        .    1   14    .    .    .    .    . 
  C3        .    .    .    7    .    .    1    . 
  C4        .    .    .    .   10    1    .    . 
  C5        .    1    .    .    .    9    .    . 
  C6        .    .    .    .    .    .   12    . 
  C7        .    .    .    .    .    .    .   15 
 Cross accuracy report #1 (reference vs C-model) 
 ---------------------------------------------------------------------------------------------------- 
 notes: - data type is different: r/float64 instead p/int8 
        - p/int8 data are dequantized with s=0.16459038853645325 zp=-19 
        - ACC metric is not computed ("--classifier" option can be used to force it) 
        - the output of the reference model is used as ground truth/reference value 
        - 100 samples (8 items per sample) 
  acc=n.a. rmse=0.008229518 mae=0.000411476 l2r=0.001197894 mean=0.000000 std=0.008235 nse=0.999999 cos=0.999999 
 Evaluation report (summary) 
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
 Output              acc      rmse          mae           l2r           mean        std        nse           cos        tensor 
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
 TARGET c-model #1   91.00%   6.667086601   5.294612408   0.970465541   -0.002146   6.671257   -404.891984   0.591149   'output_QuantizeLinear_Input', 100 x int8(1x8), m_id=[59] 
 original model #1   91.00%   6.667035580   5.294612408   0.970465124   -0.002146   6.671206   -404.885784   0.591153   'output_QuantizeLinear_Input', 100 x int8(1x8), m_id=[59] 
 X-cross #1          n.a.     0.008229518   0.000411476   0.001197894   0.000000    0.008235   0.999999      0.999999   'output_QuantizeLinear_Input', 100 x int8(1x8), m_id=[59] 
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
  acc  : Accuracy (class, axis=-1) 
  rmse : Root Mean Squared Error 
  mae  : Mean Absolute Error 
  l2r  : L2 relative error 
  mean : Mean error 
  std  : Standard deviation error 
  nse  : Nash-Sutcliffe efficiency criteria, bigger is better, best=1, range=(-inf, 1] 
  cos  : COsine Similarity, bigger is better, best=1, range=(0, 1] 
Creating txt report file C:\Users\ronan\.stm32cubemx\network_output\network_validate_report.txt 
elapsed time (validate): 272.494s 
Validation ended