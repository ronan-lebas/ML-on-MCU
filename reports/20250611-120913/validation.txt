

Starting AI validation on target with custom dataset : C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250609-185330\inputs.csv... 
C:/Users/ronan/STM32Cube/Repository/Packs/STMicroelectronics/X-CUBE-AI/10.0.0/Utilities/windows/stedgeai.exe validate --target stm32l4 --name network -m C:/Users/ronan/Documents/ETH/S2/Machine Learning on Microcontrollers/project/reports/20250611-120913/model_quantized.onnx --compression none --verbosity 1 --workspace C:/Users/ronan/AppData/Local/Temp/mxAI_workspace371837822365003497500769834415523 --output C:/Users/ronan/.stm32cubemx/network_output --valoutput C:/Users/ronan/Documents/ETH/S2/Machine Learning on Microcontrollers/project/reports/20250609-185330/outputs.csv --mode target --valinput C:/Users/ronan/Documents/ETH/S2/Machine Learning on Microcontrollers/project/reports/20250609-185330/inputs.csv --desc serial:115200 
ST Edge AI Core v2.0.0-20049 
Setting validation data... 
 loading file: C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250609-185330\inputs.csv 
   samples are reshaped: (100, 2040) -> (100, 40, 51, 1) 
 loading file: C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250609-185330\outputs.csv 
   samples are reshaped: (100, 8) -> (100, 1, 1, 8) 
   I[1]: (100, 40, 51, 1)/float32, min/max=[-602.234680, 196.972946], mean/std=[-6.763055, 46.227463] 
    c/I[1] conversion [Q(3.13133597,63)]-> (100, 40, 51, 1)/int8, min/max=[-128, 126], mean/std=[60.839975, 14.764641] 
    m/I[1] no modification. 
   O[1]: (100, 1, 1, 8)/float32, min/max=[0.000000, 1.000000], mean/std=[0.125000, 0.330719] 
Creating c (debug) info json file C:\Users\ronan\AppData\Local\Temp\mxAI_workspace371837822365003497500769834415523\network_c_info.json 
  
 Exec/report summary (validate) 
 --------------------------------------------------------------------------------------------------------------------------------------------------- 
 model file         :   C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250611-120913\model_quantized.onnx    
 type               :   onnx                                                                                                                         
 c_name             :   network                                                                                                                      
 compression        :   none                                                                                                                         
 options            :   allocate-inputs, allocate-outputs                                                                                            
 optimization       :   balanced                                                                                                                     
 target/series      :   stm32l4                                                                                                                      
 workspace dir      :   C:\Users\ronan\AppData\Local\Temp\mxAI_workspace371837822365003497500769834415523                                            
 output dir         :   C:\Users\ronan\.stm32cubemx\network_output                                                                                   
 vinput files       :   C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250609-185330\inputs.csv              
 voutput files      :   C:\Users\ronan\Documents\ETH\S2\Machine Learning on Microcontrollers\project\reports\20250609-185330\outputs.csv             
 model_fmt          :   ss/sa per tensor                                                                                                             
 model_name         :   model_quantized                                                                                                              
 model_hash         :   0x7cc66f0e9d6eeef5e602b2ad31d45af0                                                                                           
 params #           :   67,336 items (263.03 KiB)                                                                                                    
 --------------------------------------------------------------------------------------------------------------------------------------------------- 
 input 1/1          :   'input', int8(1x40x51x1), 1.99 KBytes, QLinear(3.131335974,63,int8), activations                                             
 output 1/1         :   'output_QuantizeLinear_Input', int8(1x8), 8 Bytes, QLinear(0.153226599,-19,int8), activations                                
 macc               :   47,134,696                                                                                                                   
 weights (ro)       :   68,032 B (66.44 KiB) (1 segment) / -201,312(-74.7%) vs float model                                                           
 activations (rw)   :   76,608 B (74.81 KiB) (1 segment) *                                                                                           
 ram (total)        :   76,608 B (74.81 KiB) = 76,608 + 0 + 0                                                                                        
 --------------------------------------------------------------------------------------------------------------------------------------------------- 
 (*) 'input'/'output' buffers can be used from the activations buffer 
Running the ONNX model... 
Running the ST.AI c-model (AI RUNNER)...(name=network, mode=TARGET) 
 Proto-buffer driver v2.0 (msg v3.1) (Serial driver v1.0 - COM4:115200) ['network'] 
  Summary 'network' - ['network'] 
  ------------------------------------------------------------------------------------------------- 
  I[1/1] 'input_1'    :   int8[1,40,51,1], 2040 Bytes, QLinear(3.131335974,63,int8), activations 
  O[1/1] 'output_1'   :   int8[1,1,1,8], 8 Bytes, QLinear(0.153226599,-19,int8), activations 
  n_nodes             :   7 
  activations         :   76608 
  weights             :   68032 
  macc                :   47134696 
  hash                :   0x7cc66f0e9d6eeef5e602b2ad31d45af0 
  compile_datetime    :   Jun 11 2025 20:00:32 
  ------------------------------------------------------------------------------------------------- 
  protocol            :   Proto-buffer driver v2.0 (msg v3.1) (Serial driver v1.0 - COM4:115200) 
  tools               :   ST.AI (legacy api) v2.0.0 
  runtime lib         :   v10.0.0-fd22b7f9 compiled with GCC 11.3.1 (GCC) 
  capabilities        :   IO_ONLY, PER_LAYER, PER_LAYER_WITH_DATA 
  device.desc         :   stm32 family - 0x415 - STM32L4x6xx @80/80MHz 
  device.attrs        :   fpu,art_lat=4,art_icache,art_dcache 
  ------------------------------------------------------------------------------------------------- 
STAI.IO:   0%|          | 0/100 [00:00<?, ?it/s] 
STAI.IO:   2%|2         | 2/100 [00:01<01:22,  1.19it/s] 
STAI.IO:   3%|3         | 3/100 [00:03<01:55,  1.19s/it] 
STAI.IO:   4%|4         | 4/100 [00:05<02:12,  1.38s/it] 
STAI.IO:   5%|5         | 5/100 [00:06<02:20,  1.48s/it] 
STAI.IO:   6%|6         | 6/100 [00:08<02:25,  1.55s/it] 
STAI.IO:   7%|7         | 7/100 [00:10<02:28,  1.59s/it] 
STAI.IO:   8%|8         | 8/100 [00:11<02:29,  1.62s/it] 
STAI.IO:   9%|9         | 9/100 [00:13<02:29,  1.64s/it] 
STAI.IO:  11%|#1        | 11/100 [00:16<02:27,  1.66s/it] 
STAI.IO:  12%|#2        | 12/100 [00:18<02:26,  1.67s/it] 
STAI.IO:  13%|#3        | 13/100 [00:20<02:25,  1.67s/it] 
STAI.IO:  14%|#4        | 14/100 [00:21<02:23,  1.67s/it] 
STAI.IO:  15%|#5        | 15/100 [00:23<02:22,  1.68s/it] 
STAI.IO:  16%|#6        | 16/100 [00:25<02:21,  1.68s/it] 
STAI.IO:  17%|#7        | 17/100 [00:26<02:19,  1.68s/it] 
STAI.IO:  18%|#8        | 18/100 [00:28<02:17,  1.68s/it] 
STAI.IO:  19%|#9        | 19/100 [00:30<02:16,  1.68s/it] 
STAI.IO:  20%|##        | 20/100 [00:31<02:14,  1.69s/it] 
STAI.IO:  21%|##1       | 21/100 [00:33<02:13,  1.68s/it] 
STAI.IO:  22%|##2       | 22/100 [00:35<02:11,  1.68s/it] 
STAI.IO:  23%|##3       | 23/100 [00:37<02:09,  1.69s/it] 
STAI.IO:  24%|##4       | 24/100 [00:38<02:07,  1.68s/it] 
STAI.IO:  25%|##5       | 25/100 [00:40<02:06,  1.69s/it] 
STAI.IO:  26%|##6       | 26/100 [00:42<02:04,  1.68s/it] 
STAI.IO:  27%|##7       | 27/100 [00:43<02:02,  1.68s/it] 
STAI.IO:  28%|##8       | 28/100 [00:45<02:01,  1.68s/it] 
STAI.IO:  29%|##9       | 29/100 [00:47<01:59,  1.68s/it] 
STAI.IO:  30%|###       | 30/100 [00:48<01:57,  1.68s/it] 
STAI.IO:  31%|###1      | 31/100 [00:50<01:56,  1.68s/it] 
STAI.IO:  32%|###2      | 32/100 [00:52<01:54,  1.68s/it] 
STAI.IO:  33%|###3      | 33/100 [00:53<01:52,  1.68s/it] 
STAI.IO:  34%|###4      | 34/100 [00:55<01:51,  1.69s/it] 
STAI.IO:  35%|###5      | 35/100 [00:57<01:49,  1.69s/it] 
STAI.IO:  36%|###6      | 36/100 [00:58<01:47,  1.68s/it] 
STAI.IO:  37%|###7      | 37/100 [01:00<01:46,  1.68s/it] 
STAI.IO:  38%|###8      | 38/100 [01:02<01:44,  1.68s/it] 
STAI.IO:  39%|###9      | 39/100 [01:03<01:42,  1.68s/it] 
STAI.IO:  40%|####      | 40/100 [01:05<01:41,  1.68s/it] 
STAI.IO:  41%|####1     | 41/100 [01:07<01:39,  1.68s/it] 
STAI.IO:  42%|####2     | 42/100 [01:09<01:37,  1.68s/it] 
STAI.IO:  43%|####3     | 43/100 [01:10<01:35,  1.68s/it] 
STAI.IO:  44%|####4     | 44/100 [01:12<01:34,  1.68s/it] 
STAI.IO:  45%|####5     | 45/100 [01:14<01:32,  1.68s/it] 
STAI.IO:  46%|####6     | 46/100 [01:15<01:30,  1.68s/it] 
STAI.IO:  47%|####6     | 47/100 [01:17<01:29,  1.68s/it] 
STAI.IO:  48%|####8     | 48/100 [01:19<01:27,  1.68s/it] 
STAI.IO:  49%|####9     | 49/100 [01:20<01:25,  1.68s/it] 
STAI.IO:  50%|#####     | 50/100 [01:22<01:24,  1.68s/it] 
STAI.IO:  51%|#####1    | 51/100 [01:24<01:22,  1.68s/it] 
STAI.IO:  52%|#####2    | 52/100 [01:25<01:20,  1.68s/it] 
STAI.IO:  53%|#####3    | 53/100 [01:27<01:19,  1.68s/it] 
STAI.IO:  54%|#####4    | 54/100 [01:29<01:17,  1.68s/it] 
STAI.IO:  55%|#####5    | 55/100 [01:30<01:15,  1.68s/it] 
STAI.IO:  56%|#####6    | 56/100 [01:32<01:14,  1.68s/it] 
STAI.IO:  57%|#####6    | 57/100 [01:34<01:12,  1.68s/it] 
STAI.IO:  58%|#####8    | 58/100 [01:35<01:10,  1.68s/it] 
STAI.IO:  59%|#####8    | 59/100 [01:37<01:09,  1.68s/it] 
STAI.IO:  60%|######    | 60/100 [01:39<01:07,  1.68s/it] 
STAI.IO:  61%|######1   | 61/100 [01:41<01:05,  1.68s/it] 
STAI.IO:  62%|######2   | 62/100 [01:42<01:03,  1.68s/it] 
STAI.IO:  63%|######3   | 63/100 [01:44<01:02,  1.68s/it] 
STAI.IO:  64%|######4   | 64/100 [01:46<01:00,  1.68s/it] 
STAI.IO:  65%|######5   | 65/100 [01:47<00:58,  1.68s/it] 
STAI.IO:  66%|######6   | 66/100 [01:49<00:57,  1.68s/it] 
STAI.IO:  67%|######7   | 67/100 [01:51<00:55,  1.68s/it] 
STAI.IO:  68%|######8   | 68/100 [01:52<00:53,  1.68s/it] 
STAI.IO:  69%|######9   | 69/100 [01:54<00:52,  1.68s/it] 
STAI.IO:  70%|#######   | 70/100 [01:56<00:50,  1.68s/it] 
STAI.IO:  71%|#######1  | 71/100 [01:57<00:48,  1.68s/it] 
STAI.IO:  72%|#######2  | 72/100 [01:59<00:47,  1.68s/it] 
STAI.IO:  73%|#######3  | 73/100 [02:01<00:45,  1.68s/it] 
STAI.IO:  74%|#######4  | 74/100 [02:02<00:43,  1.68s/it] 
STAI.IO:  75%|#######5  | 75/100 [02:04<00:42,  1.68s/it] 
STAI.IO:  76%|#######6  | 76/100 [02:06<00:40,  1.68s/it] 
STAI.IO:  77%|#######7  | 77/100 [02:07<00:38,  1.68s/it] 
STAI.IO:  78%|#######8  | 78/100 [02:09<00:37,  1.68s/it] 
STAI.IO:  79%|#######9  | 79/100 [02:11<00:35,  1.68s/it] 
STAI.IO:  80%|########  | 80/100 [02:13<00:33,  1.68s/it] 
STAI.IO:  81%|########1 | 81/100 [02:14<00:31,  1.68s/it] 
STAI.IO:  82%|########2 | 82/100 [02:16<00:30,  1.68s/it] 
STAI.IO:  83%|########2 | 83/100 [02:18<00:28,  1.68s/it] 
STAI.IO:  84%|########4 | 84/100 [02:19<00:26,  1.68s/it] 
STAI.IO:  85%|########5 | 85/100 [02:21<00:25,  1.68s/it] 
STAI.IO:  86%|########6 | 86/100 [02:23<00:23,  1.68s/it] 
STAI.IO:  87%|########7 | 87/100 [02:24<00:21,  1.68s/it] 
STAI.IO:  88%|########8 | 88/100 [02:26<00:20,  1.68s/it] 
STAI.IO:  89%|########9 | 89/100 [02:28<00:18,  1.68s/it] 
STAI.IO:  90%|######### | 90/100 [02:29<00:16,  1.68s/it] 
STAI.IO:  91%|#########1| 91/100 [02:31<00:15,  1.68s/it] 
STAI.IO:  92%|#########2| 92/100 [02:33<00:13,  1.68s/it] 
STAI.IO:  93%|#########3| 93/100 [02:34<00:11,  1.68s/it] 
STAI.IO:  94%|#########3| 94/100 [02:36<00:10,  1.68s/it] 
STAI.IO:  95%|#########5| 95/100 [02:38<00:08,  1.68s/it] 
STAI.IO:  96%|#########6| 96/100 [02:39<00:06,  1.68s/it] 
STAI.IO:  97%|#########7| 97/100 [02:41<00:05,  1.68s/it] 
STAI.IO:  98%|#########8| 98/100 [02:43<00:03,  1.68s/it] 
STAI.IO:  99%|#########9| 99/100 [02:45<00:01,  1.68s/it] 
  ST.AI Profiling results v2.0 - "network" 
  ------------------------------------------------------------------------ 
  nb sample(s)      :   100 
  duration          :   1295.659 ms by sample (1295.657/1295.661/0.001) 
  macc              :   47134696 
  cycles/MACC       :   2.20 
  CPU cycles        :   [103,652,729] 
  used stack/heap   :   not monitored/0 bytes 
  ------------------------------------------------------------------------ 
   Inference time per node 
   ----------------------------------------------------------------------------------------------- 
   c_id    m_id   type                   dur (ms)       %    cumul  CPU cycles        name 
   ----------------------------------------------------------------------------------------------- 
   0       18     Conv2D (0x103)           49.507    3.8%     3.8%  [   3,960,555 ]   ai_node_0 
   1       24     Conv2dPool (0x109)      494.904   38.2%    42.0%  [  39,592,337 ]   ai_node_1 
   2       27     Conv2D (0x103)          229.679   17.7%    59.7%  [  18,374,346 ]   ai_node_2 
   3       30     Conv2D (0x103)          518.037   40.0%    99.7%  [  41,442,975 ]   ai_node_3 
   4       33     Pool (0x10b)              3.405    0.3%   100.0%  [     272,410 ]   ai_node_4 
   5       43     Dense (0x104)             0.091    0.0%   100.0%  [       7,290 ]   ai_node_5 
   6       46     Dense (0x104)             0.035    0.0%   100.0%  [       2,816 ]   ai_node_6 
   ----------------------------------------------------------------------------------------------- 
   n/a     n/a    Inter-nodal               0.000    0.0%   100.0%                    n/a 
   ----------------------------------------------------------------------------------------------- 
   total                                 1295.659                   [ 103,652,729 ] 
   ----------------------------------------------------------------------------------------------- 
   Statistic per tensor 
   -------------------------------------------------------------------------------- 
   tensor   #     type[shape]:size        min   max      mean      std  name 
   -------------------------------------------------------------------------------- 
   I.0      100   i8[1,40,51,1]:2040     -128   126    60.840   14.765  input_1 
   O.0      100   i8[1,1,1,8]:8          -128   127   -18.239   41.762  output_1 
   -------------------------------------------------------------------------------- 
Saving validation data... 
 output directory: C:\Users\ronan\.stm32cubemx\network_output 
 creating C:\Users\ronan\.stm32cubemx\network_output\network_val_io.npz 
 m_outputs_1: (100, 1, 1, 8)/float64, min/max=[-16.701700, 22.371084], mean/std=[0.116452, 6.398729], output_QuantizeLinear_Input 
 c_outputs_1: (100, 1, 1, 8)/int8, min/max=[-128, 127], mean/std=[-18.238750, 41.761935], scale=0.153226599 zp=-19, output_QuantizeLinear_Input 
Computing the metrics... 
 Accuracy report #1 for the generated TARGET C-model 
 ---------------------------------------------------------------------------------------------------- 
 notes: - data type is different: r/float32 instead p/int8 
        - p/int8 data are dequantized with s=0.1532265990972519 zp=-19 
        - computed against the provided ground truth values 
        - 100 samples (8 items per sample) 
  acc=93.00% rmse=6.213831425 mae=4.943766594 l2r=0.970895648 mean=0.008356 std=6.217713 nse=-351.579611 cos=0.546808 
  Confusion matrix (axis=-1) - 8 classes (100 samples) 
  ------------------------------------------------ 
  C0        9    1    2    .    .    .    1    . 
  C1        .   16    .    .    .    .    .    . 
  C2        .    1   14    .    .    .    .    . 
  C3        .    .    .    8    .    .    .    . 
  C4        .    .    .    1   10    .    .    . 
  C5        .    1    .    .    .    9    .    . 
  C6        .    .    .    .    .    .   12    . 
  C7        .    .    .    .    .    .    .   15 
 Accuracy report #1 for the reference model 
 ---------------------------------------------------------------------------------------------------- 
 notes: - data type is different: r/float32 instead p/float64 
        - p/float64 data are converted to np.float32 
        - computed against the provided ground truth values 
        - 100 samples (8 items per sample) 
  acc=93.00% rmse=6.213538647 mae=4.943191528 l2r=0.970897496 mean=0.008548 std=6.217420 nse=-351.546415 cos=0.546750 
  Confusion matrix (axis=-1) - 8 classes (100 samples) 
  ------------------------------------------------ 
  C0        9    1    2    .    .    .    1    . 
  C1        .   16    .    .    .    .    .    . 
  C2        .    1   14    .    .    .    .    . 
  C3        .    .    .    8    .    .    .    . 
  C4        .    .    .    1   10    .    .    . 
  C5        .    1    .    .    .    9    .    . 
  C6        .    .    .    .    .    .   12    . 
  C7        .    .    .    .    .    .    .   15 
 Cross accuracy report #1 (reference vs C-model) 
 ---------------------------------------------------------------------------------------------------- 
 notes: - data type is different: r/float64 instead p/int8 
        - p/int8 data are dequantized with s=0.1532265990972519 zp=-19 
        - ACC metric is not computed ("--classifier" option can be used to force it) 
        - the output of the reference model is used as ground truth/reference value 
        - 100 samples (8 items per sample) 
  acc=n.a. rmse=0.012113635 mae=0.000957667 l2r=0.001892725 mean=-0.000192 std=0.012120 nse=0.999996 cos=0.999998 
 Evaluation report (summary) 
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
 Output              acc      rmse          mae           l2r           mean        std        nse           cos        tensor 
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
 TARGET c-model #1   93.00%   6.213831425   4.943766594   0.970895648   0.008356    6.217713   -351.579611   0.546808   'output_QuantizeLinear_Input', 100 x int8(1x8), m_id=[46] 
 original model #1   93.00%   6.213538647   4.943191528   0.970897496   0.008548    6.217420   -351.546415   0.546750   'output_QuantizeLinear_Input', 100 x int8(1x8), m_id=[46] 
 X-cross #1          n.a.     0.012113635   0.000957667   0.001892725   -0.000192   0.012120   0.999996      0.999998   'output_QuantizeLinear_Input', 100 x int8(1x8), m_id=[46] 
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
  acc  : Accuracy (class, axis=-1) 
  rmse : Root Mean Squared Error 
  mae  : Mean Absolute Error 
  l2r  : L2 relative error 
  mean : Mean error 
  std  : Standard deviation error 
  nse  : Nash-Sutcliffe efficiency criteria, bigger is better, best=1, range=(-inf, 1] 
  cos  : COsine Similarity, bigger is better, best=1, range=(0, 1] 
Creating txt report file C:\Users\ronan\.stm32cubemx\network_output\network_validate_report.txt 
elapsed time (validate): 175.924s 
Validation ended